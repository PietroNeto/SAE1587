Blocos que começam com qualquer um dos [(13, 42, 40), (13, 42, 2), (13, 58, 40), (13, 58, 2)] (ordenados por frequência e valor):

0D  2A  28  02  14  FF  03  0C  80  00  B6  87  CA  FF  05  47  0D  11  E1  F1  EC  07  0D  2A [2111x]
0D  2A  02  28  0A  FF  18  04  4C  47  0D  FF  FF  11  FF  FF  00  00  10  00  10  00  FD  3A  3C  3A  FF  00  00  76  01  99  A3  66  FF  07  00  0B  05  1A  05  E1  01  B4  41  0D  2A [621x]
0D  2A  02  28  0A  FF  18  04  4C  47  0D  FF  FF  11  FF  FF  00  00  10  00  10  00  FD  3A  3C  3A  FF  00  00  76  01  99 [185x]
0D  3A  02  28  0A  FF  18  04  4C  47  0D  FF  FF  11  FF  FF  00  00  10  00  10  00  FD  3A  3C  3A  FF  00  00  76  01  99  A3  66  FF  07  00  0B  05  1A  05  E1  01  B4  41  D3  FF  07  00  26  92  14  00  00  FF  0B  DF  0D  3A [62x]
0D  2A  28  02  14  FF  03  0C  80  00  B6  87  CA  FF  05  47  0D  11  E1  F1  EC  07  0D [1x]



0D  3A  02  28  0A  FF  18  04  4C  47  0D  FF  FF  11  FF  FF  00  00  10  00  10  00  FD  -3A  3C  3A  FF  00  00  76  01  -99  -A3  66  FF  07  00  0B  05  1A  05  E1  01  -B4  -41  D3  FF  07  00  26  92  14  00  00  FF  -0B  -DF  0D  3A
                                                                                                                                                                                              +  len                            | CRC LE |
0D  2A  02  28  0A  FF  18  04  4C  47  0D  FF  FF  11  FF  FF  00  00  10  00  10  00  FD  *3A  3C  3A  FF  00  00  76  01  *99  *A3  66  FF  07  00  0B  05  1A  05  E1  01  -B4  -41  0D  2A - tanque meio
0D  2A  02  28  0A  FF  18  04  4C  47  0D  FF  FF  11  FF  FF  00  00  10  00  10  00  FD  *5B  3C  3A  FF  00  00  76  01  *5E  *47  66  FF  07  00  0B  05  1A  05  E1  01  -B4  -41  0D  2A - tanque cheio
0D  2A  02  28  0A  FF  18  04  4C  47  0D  FF  FF  11  FF  FF  00  00  10  00  10  00  FD  *08  3C  3A  FF  00  00  76  01  *1B  *6E  66  FF  07  00  0B  05  1A  05  E1  01  -B4  -41  0D  2A - tanque vazio
STX|MT| IDO|IDD|FC| ST |len|----------------------DATA-------------------------------------| TQ |---------------------------| CRC LE | FC |ST|len |-----------DATA-----------| CRC LE | MT |ETX
Testando frame 'cheio':
Start= 4, CRC-16-IBM           => Calc: 0x475E | Esperado: 0x5E47 (BE) / 0x475E (LE) ✅
Start= 4, CRC-16-ANSI          => Calc: 0x475E | Esperado: 0x5E47 (BE) / 0x475E (LE) ✅
Start= 4, CRC-16-CAN-FD        => Calc: 0x475E | Esperado: 0x5E47 (BE) / 0x475E (LE) ✅

Testando frame 'meio':
Start= 4, CRC-16-IBM           => Calc: 0xA399 | Esperado: 0x99A3 (BE) / 0xA399 (LE) ✅
Start= 4, CRC-16-ANSI          => Calc: 0xA399 | Esperado: 0x99A3 (BE) / 0xA399 (LE) ✅
Start= 4, CRC-16-CAN-FD        => Calc: 0xA399 | Esperado: 0x99A3 (BE) / 0xA399 (LE) ✅

Testando frame 'vazio':
Start= 4, CRC-16-IBM           => Calc: 0x6E1B | Esperado: 0x1B6E (BE) / 0x6E1B (LE) ✅
Start= 4, CRC-16-ANSI          => Calc: 0x6E1B | Esperado: 0x1B6E (BE) / 0x6E1B (LE) ✅
Start= 4, CRC-16-CAN-FD        => Calc: 0x6E1B | Esperado: 0x1B6E (BE) / 0x6E1B (LE) ✅



Testando frame 'cheio':
Start= 4, CRC-16-IBM           => Calc: 0x41B4 | Esperado: 0xB441 (BE) / 0x41B4 (LE) ✅
Start= 4, CRC-16-ANSI          => Calc: 0x41B4 | Esperado: 0xB441 (BE) / 0x41B4 (LE) ✅
Start= 4, CRC-16-CAN-FD        => Calc: 0x41B4 | Esperado: 0xB441 (BE) / 0x41B4 (LE) ✅

Testando frame 'meio':
Start= 4, CRC-16-IBM           => Calc: 0x41B4 | Esperado: 0xB441 (BE) / 0x41B4 (LE) ✅
Start= 4, CRC-16-ANSI          => Calc: 0x41B4 | Esperado: 0xB441 (BE) / 0x41B4 (LE) ✅
Start= 4, CRC-16-CAN-FD        => Calc: 0x41B4 | Esperado: 0xB441 (BE) / 0x41B4 (LE) ✅

Testando frame 'vazio':
Start= 4, CRC-16-IBM           => Calc: 0x41B4 | Esperado: 0xB441 (BE) / 0x41B4 (LE) ✅
Start= 4, CRC-16-ANSI          => Calc: 0x41B4 | Esperado: 0xB441 (BE) / 0x41B4 (LE) ✅
Start= 4, CRC-16-CAN-FD        => Calc: 0x41B4 | Esperado: 0xB441 (BE) / 0x41B4 (LE) ✅